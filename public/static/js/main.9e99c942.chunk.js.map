{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepare-events.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-messages.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","start","moment","toDate","end","user","name","nombre","_id","eventAddNew","event","type","payload","eventClearActive","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","correo","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","usuario","Swal","fire","msg","placeholder","onChange","role","errors","startRegister","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","setTimeout","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","onDoubleClickEvent","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e99c942.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            },\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[UI] Open modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n\r\n\r\n    eventSetActive: '[Event] Set active',\r\n    eventStartAddNew: '[Event] Start add new',\r\n    eventAddNew: '[Event] Add new',\r\n    eventClearActive: '[Event] Clear active',\r\n    eventUpdated: '[Event] Updated event',\r\n    eventDeleted: '[Event] Deleted event',\r\n    eventLoaded: '[Event] Events loaded',\r\n    eventLogout: '[Event] Event logout',\r\n\r\n    authChekingFinish: '[Auth] Finish checking login state',\r\n    authStartLogin: '[Auth] Start login',\r\n    authLogin: '[Auth] Login',\r\n    authStartRegister: '[Auth] Start Register',\r\n    authStartTokenRenew: '[Auth] Start token renew',\r\n    authLogout: '[Auth] Logout',\r\n\r\n\r\n}","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({ \r\n            ...e,  \r\n            start: moment(e.start).toDate(),\r\n            end: moment(e.end).toDate(),\r\n            user: {\r\n                name: e.user.nombre,\r\n                _id: e.user._id\r\n            }\r\n        })\r\n    )\r\n    \r\n}\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch'\r\nimport { prepareEvents } from '../helpers/prepare-events';\r\nimport { types } from '../types/types'\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const data = await resp.json();\r\n            \r\n            if(data.ok) {\r\n                event.id = data.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const data = await resp.json();\r\n            \r\n            if(data.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', data.errors[0].msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDeleted = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const data = await resp.json();\r\n            \r\n            if(data.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', data.errors[0].msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const data = await resp.json()\r\n\r\n            const events = prepareEvents(data.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startlogin = (correo, password) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/login', { correo, password }, 'POST');\r\n        const data = await resp.json();\r\n        \r\n        if(data.ok) {\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: data.usuario.uid,\r\n                name: data.usuario.nombre\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport const startRegister = ( nombre, correo, password, role = 'ADMIN_ROLE' ) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('usuarios', { nombre, correo, password, role }, 'POST');\r\n        const data = await resp.json();\r\n        \r\n        if(data.ok) {\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: data.usuario.uid,\r\n                name: data.usuario.nombre\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', data.errors[0].msg, 'error');\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const data = await resp.json();\r\n        \r\n        if(data.ok) {\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: data.usuario.uid,\r\n                name: data.usuario.nombre\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authChekingFinish\r\n})\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout   \r\n})\r\n\r\n\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({ ...values, [target.name]: target.value });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startlogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'gaston@gmail.com',\r\n        lPassword: '123456'\r\n    })\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Gaston',\r\n        rEmail: 'gastonkhouri@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    })\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startlogin(lEmail, lPassword));\r\n        \r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin } >\r\n                        <div className=\"form-group\" >\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nconst Navbar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch(startLogout());\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n\r\n            <span className='navbar-brand'>\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className='btn btn-outline-danger'\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nconst CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n    \r\n    const [ formValues, setFormValues ] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        setTimeout(() => {\r\n            dispatch(eventClearActive());\r\n            setFormValues(initEvent);\r\n        }, 130)\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ start }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ end }\r\n                        minDate={ start }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CalendarModal;","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: (total) => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nconst AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    \r\n\r\n    return (\r\n        <button\r\n            className='btn btn-primary fab'\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDeleted());\r\n    }    \r\n\r\n    return (\r\n        <button\r\n            className='btn btn-danger fab-danger'\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className='fas fa-trash'></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\n\r\nimport Navbar from '../ui/Navbar';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { messages } from '../../helpers/calendar-messages';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nmoment().locale('es');\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nconst CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(eventStartLoading());\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActive());\r\n    }\r\n    \r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        } \r\n\r\n    }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onSelectEvent={ onSelectEvent }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                onView={ onViewChange }\r\n                view={ lastView }\r\n                components={{ event: CalendarEvent }}\r\n            />\r\n\r\n            {\r\n                activeEvent && (<DeleteEventFab />)\r\n            }\r\n\r\n            <AddNewFab />\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to='/login' /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to='/' /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\n\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch]);\r\n\r\n    if(checking) {\r\n        return (<h2>Cargando...</h2>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        isAuthenticated={ !!uid } \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen } \r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        isAuthenticated={ !!uid }\r\n                        exact\r\n                        path=\"/\"\r\n                        component={ CalendarScreen } \r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authreducer = (state = initialState, action) => {\r\n    \r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authChekingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: 'bfufeh213',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add('2', 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Gaston'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            };\r\n        \r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id)\r\n                                ? action.payload\r\n                                : e\r\n                )\r\n            }\r\n    \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => e.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n    \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authreducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authreducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\n\r\nimport AppRouter from './router/AppRouter'\r\nimport { store } from './store/store';\r\n\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}